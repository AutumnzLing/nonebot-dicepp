:py:mod:`DicePP.command.impl.nickname_command`
==============================================

.. py:module:: DicePP.command.impl.nickname_command


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   DicePP.command.impl.nickname_command.NicknameCommand




Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.command.impl.nickname_command.LOC_NICKNAME_SET
   DicePP.command.impl.nickname_command.LOC_NICKNAME_RESET
   DicePP.command.impl.nickname_command.LOC_NICKNAME_RESET_FAIL
   DicePP.command.impl.nickname_command.LOC_NICKNAME_ILLEGAL
   DicePP.command.impl.nickname_command.MAX_NICKNAME_LENGTH


.. py:data:: LOC_NICKNAME_SET
   :annotation: = nickname_set

   

.. py:data:: LOC_NICKNAME_RESET
   :annotation: = nickname_reset

   

.. py:data:: LOC_NICKNAME_RESET_FAIL
   :annotation: = nickname_reset_fail

   

.. py:data:: LOC_NICKNAME_ILLEGAL
   :annotation: = nickname_illegal

   

.. py:data:: MAX_NICKNAME_LENGTH
   :annotation: = 30

   

.. py:class:: NicknameCommand(bot: bot_core.Bot)

   Bases: :py:obj:`command.dicepp_command.UserCommandBase`

   更改用户自定义昵称的指令, 以.nn开头

   .. py:method:: can_process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData) -> Tuple[bool, bool, Any]


   .. py:method:: process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData, hint: Any) -> List[command.BotCommandBase]


   .. py:method:: get_help(self, keyword: str, meta: command.dicepp_command.MessageMetaData) -> str


   .. py:method:: get_description(self) -> str


   .. py:method:: is_legal_nickname(cls, nickname: str) -> bool
      :classmethod:

      检查一个昵称是否合法
      Args:
          nickname: 要检查的昵称

      Returns:




