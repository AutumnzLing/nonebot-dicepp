:py:mod:`DicePP.character.dnd5e.character`
==========================================

.. py:module:: DicePP.character.dnd5e.character


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   DicePP.character.dnd5e.character.DNDCharInfo



Functions
~~~~~~~~~

.. autoapisummary::

   DicePP.character.dnd5e.character.read_data_from_str_to_dict
   DicePP.character.dnd5e.character.gen_template_char



Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.character.dnd5e.character.CHAR_INFO_KEY_NAME
   DicePP.character.dnd5e.character.CHAR_INFO_KEY_LIST


.. py:data:: CHAR_INFO_KEY_NAME
   :annotation: = $姓名$

   

.. py:data:: CHAR_INFO_KEY_LIST
   

   

.. py:function:: read_data_from_str_to_dict(input_str: str, output_dict: Dict[str, str])

   使用类似角色卡描述的字符串填充输出字典, 本质只是分割字符串
   默认所有关键字都被$符号包裹, 且$符号不会出现在普通信息中


.. py:class:: DNDCharInfo

   Bases: :py:obj:`data_manager.JsonObject`

   DND5E 角色信息

   .. py:method:: serialize(self) -> str


   .. py:method:: deserialize(self, json_str: str) -> None


   .. py:method:: initialize(self, input_str: str)

      通过用户输入初始化属性, 任意内容初始化失败则抛出AssertionError, 并且不会产生实际影响
      角色卡示例:
      $姓名$ 伊丽莎白
      $等级$ 5
      $生命值$ 5/10(4)
      $生命骰$ 4/10 D6
      $属性$ 10/11/12/15/12
      $熟练$ 力量/2*隐匿/奥秘
      $额外加值$ 运动:优势/隐匿:优势+2/游说:-2


   .. py:method:: get_char_info(self) -> str

      返回完整角色卡描述


   .. py:method:: use_hp_dice(self, num: int) -> str


   .. py:method:: long_rest(self) -> str



.. py:function:: gen_template_char() -> DNDCharInfo


