:py:mod:`DicePP.character.dnd5e.health`
=======================================

.. py:module:: DicePP.character.dnd5e.health


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   DicePP.character.dnd5e.health.HPInfo




Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.character.dnd5e.health.CHAR_INFO_KEY_HP
   DicePP.character.dnd5e.health.CHAR_INFO_KEY_HP_DICE


.. py:data:: CHAR_INFO_KEY_HP
   :annotation: = $生命值$

   

.. py:data:: CHAR_INFO_KEY_HP_DICE
   :annotation: = $生命骰$

   

.. py:class:: HPInfo

   Bases: :py:obj:`data_manager.JsonObject`

   HP信息

   .. py:method:: serialize(self) -> str


   .. py:method:: deserialize(self, json_str: str) -> None


   .. py:method:: initialize(self, hp_cur: int, hp_max: int = 0, hp_temp: int = 0, hp_dice_type: int = 0, hp_dice_num: int = 0, hp_dice_max: int = 0)


   .. py:method:: is_record_normal(self) -> bool

      当前是否正常记录生命值 (拥有hp, 而不是单纯记录受损hp)


   .. py:method:: is_record_damage(self) -> bool

      当前是否是记录受损生命值的情况


   .. py:method:: take_damage(self, value: int)


   .. py:method:: heal(self, value: int)


   .. py:method:: get_info(self) -> str


   .. py:method:: use_hp_dice(self, num: int, con_mod: int) -> str

      使用生命骰, 并返回修改结果描述, 如
      使用2颗D4生命骰, 体质调整值为1, 回复(4+1)+(2+1)=8点生命值
      HP: 2/4 -> 4/4


   .. py:method:: long_rest(self)


   .. py:method:: process_roll_result(self, cmd_type: Literal[=, +, -], hp_cur_mod_result: Optional[roll_dice.RollResult] = None, hp_max_mod_result: Optional[roll_dice.RollResult] = None, hp_temp_mod_result: Optional[roll_dice.RollResult] = None, short_feedback=False) -> str

      根据输入进行修改, 返回修改结果描述, 如:
      当前HP减少 2*4 = 8
      HP: 10 -> HP: 2


   .. py:method:: get_char_info(self) -> str

      返回可用来组合成初始化角色卡的字符串
      例子:
      $生命值$ 5/10 (4)
      $生命骰$ 4/10 D6
      例子2:
      $生命值$ 8



