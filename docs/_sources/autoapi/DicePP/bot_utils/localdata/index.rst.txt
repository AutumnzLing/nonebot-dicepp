:py:mod:`DicePP.bot_utils.localdata`
====================================

.. py:module:: DicePP.bot_utils.localdata


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   DicePP.bot_utils.localdata.read_json
   DicePP.bot_utils.localdata.update_json
   DicePP.bot_utils.localdata.update_json_async
   DicePP.bot_utils.localdata.read_xlsx
   DicePP.bot_utils.localdata.update_xlsx
   DicePP.bot_utils.localdata.get_empty_col_based_workbook
   DicePP.bot_utils.localdata.col_based_workbook_to_dict
   DicePP.bot_utils.localdata.format_worksheet
   DicePP.bot_utils.localdata.create_parent_dir



.. py:function:: read_json(path: str) -> dict

   从path中读取一个json文件并返回对应的字典


.. py:function:: update_json(json_dict: dict, path: str) -> None

   将jsonFile保存到path路径中


.. py:function:: update_json_async(json_dict: dict, path: str) -> None
   :async:

   异步地将jsonFile保存到path路径中


.. py:function:: read_xlsx(path: str) -> openpyxl.Workbook

   读取xlsx, 记得之后手动关闭workbook


.. py:function:: update_xlsx(workbook: openpyxl.Workbook, path: str) -> None


.. py:function:: get_empty_col_based_workbook(keywords: List[str], keyword_comments: Dict[str, str]) -> openpyxl.Workbook

   获得一个模板工作簿


.. py:function:: col_based_workbook_to_dict(wb: openpyxl.Workbook, keywords: List[str], error_info: List[str]) -> dict

   将已经读取的 column based 工作簿转换为dict, 要求第一行是关键字, 后续行是对应内容, 如果sheet中没有任何内容或关键字不完整则不会创建对应的字典
   Args:
       wb: 已经读取的xlsx
       keywords: 关键字列表, 如果为空将会使用表中已有的全部关键字
       error_info: 将检测到的错误加入到error_info中

   Returns:
       result: 字典, 第一级key为sheet名称, 第二级key为关键字, 之后是字符串列表
       通过类似 result[sheet_name][key_name][row_index-2] 来访问对应的数据, 没有数据则返回空字符串


.. py:function:: format_worksheet(sheet, height: float = 30, min_width: float = 20, width_scale: float = 1)

   Args:
       sheet: 要修改的页面, 类型为openpyxl.worksheet.worksheet.Worksheet
       height: 每行高度
       min_width: 每列最小宽度
       width_scale:  列宽=列内最大字符数*width_scale


.. py:function:: create_parent_dir(path: str)

   为path递归创建所有不存在的父文件夹


