:py:mod:`DicePP.dice_hub.encrypt`
=================================

.. py:module:: DicePP.dice_hub.encrypt


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   DicePP.dice_hub.encrypt.encrypt_rsa
   DicePP.dice_hub.encrypt.decrypt_rsa
   DicePP.dice_hub.encrypt.create_rsa_key
   DicePP.dice_hub.encrypt.save_rsa_public_key
   DicePP.dice_hub.encrypt.save_rsa_private_key
   DicePP.dice_hub.encrypt.load_rsa_public_key
   DicePP.dice_hub.encrypt.load_rsa_private_key
   DicePP.dice_hub.encrypt.load_rsa_public_key_from_str
   DicePP.dice_hub.encrypt.load_rsa_private_key_from_str
   DicePP.dice_hub.encrypt.save_rsa_public_key_as_str
   DicePP.dice_hub.encrypt.save_rsa_private_key_as_str



Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.dice_hub.encrypt.RSA_LEN
   DicePP.dice_hub.encrypt.ENCRYPT_SEG_LEN
   DicePP.dice_hub.encrypt.CONTENT_SEG_LEN
   DicePP.dice_hub.encrypt.HEADER_LEN
   DicePP.dice_hub.encrypt.MAX_TEXT_LEN
   DicePP.dice_hub.encrypt.BYTE_TO_INT_RULE
   DicePP.dice_hub.encrypt.INT_TO_BYTE_RULE
   DicePP.dice_hub.encrypt.ENCODE_STYLE


.. py:data:: RSA_LEN
   :annotation: = 1024

   

.. py:data:: ENCRYPT_SEG_LEN
   

   

.. py:data:: CONTENT_SEG_LEN
   

   

.. py:data:: HEADER_LEN
   :annotation: = 1

   

.. py:data:: MAX_TEXT_LEN
   

   

.. py:data:: BYTE_TO_INT_RULE
   

   

.. py:data:: INT_TO_BYTE_RULE
   

   

.. py:data:: ENCODE_STYLE
   :annotation: = utf-8

   

.. py:function:: encrypt_rsa(text: str, public_key: rsa.PublicKey) -> str


.. py:function:: decrypt_rsa(rsa_str: str, private_key: rsa.PrivateKey) -> str


.. py:function:: create_rsa_key(name: str, path: str) -> Tuple[rsa.PublicKey, rsa.PrivateKey]


.. py:function:: save_rsa_public_key(public_key: rsa.PublicKey, name: str, path: str) -> str


.. py:function:: save_rsa_private_key(private_key: rsa.PrivateKey, name: str, path: str) -> str


.. py:function:: load_rsa_public_key(name: str, path: str) -> rsa.PublicKey


.. py:function:: load_rsa_private_key(name: str, path: str) -> rsa.PrivateKey


.. py:function:: load_rsa_public_key_from_str(key_str: str) -> rsa.PublicKey


.. py:function:: load_rsa_private_key_from_str(key_str: str) -> rsa.PrivateKey


.. py:function:: save_rsa_public_key_as_str(public_key: rsa.PublicKey) -> str


.. py:function:: save_rsa_private_key_as_str(private_key: rsa.PrivateKey) -> str


