:py:mod:`DicePP.data_manager.json_object`
=========================================

.. py:module:: DicePP.data_manager.json_object

.. autoapi-nested-parse::

   继承JsonObject的类可以通过DataManager序列化或反序列



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   DicePP.data_manager.json_object.JsonObject



Functions
~~~~~~~~~

.. autoapisummary::

   DicePP.data_manager.json_object.custom_json_object



Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.data_manager.json_object.JSON_OBJECT_PREFIX
   DicePP.data_manager.json_object.ALL_JSON_OBJ_DICT


.. py:data:: JSON_OBJECT_PREFIX
   :annotation: = JSON_OBJ_

   

.. py:class:: JsonObject

   可以存在Json中的Object, 并不代表一定要通过Json反序列化和序列化
   构造函数不能拥有参数! 原因见construct_from_json

   .. py:method:: to_json(self) -> str


   .. py:method:: construct_from_json(cls, json_str: str) -> JsonObject
      :classmethod:

      从一个json字符串中构造一个json object并返回
      Args:
          json_str: 格式见JsonObject.to_json方法
      Returns:



   .. py:method:: serialize(self) -> str
      :abstractmethod:

      将自身序列化为任意字符串


   .. py:method:: deserialize(self, json_str: str) -> None
      :abstractmethod:

      通过字符串将自身反序列化



.. py:data:: ALL_JSON_OBJ_DICT
   :annotation: :Dict[str, Type[JsonObject]]

   

.. py:function:: custom_json_object(cls)

   类修饰器, 将自定义JsonObject注册到列表中


