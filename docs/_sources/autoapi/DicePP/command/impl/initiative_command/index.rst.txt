:py:mod:`DicePP.command.impl.initiative_command`
================================================

.. py:module:: DicePP.command.impl.initiative_command


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   DicePP.command.impl.initiative_command.InitiativeCommand




Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.command.impl.initiative_command.LOC_INIT_ROLL
   DicePP.command.impl.initiative_command.LOC_INIT_INFO
   DicePP.command.impl.initiative_command.LOC_INIT_INFO_NOT_EXIST
   DicePP.command.impl.initiative_command.LOC_INIT_ENTITY_NOT_FOUND
   DicePP.command.impl.initiative_command.LOC_INIT_ENTITY_VAGUE
   DicePP.command.impl.initiative_command.LOC_INIT_INFO_CLR
   DicePP.command.impl.initiative_command.LOC_INIT_INFO_DEL
   DicePP.command.impl.initiative_command.LOC_INIT_UNKNOWN
   DicePP.command.impl.initiative_command.LOC_INIT_ERROR


.. py:data:: LOC_INIT_ROLL
   :annotation: = initiative_roll

   

.. py:data:: LOC_INIT_INFO
   :annotation: = initiative_info

   

.. py:data:: LOC_INIT_INFO_NOT_EXIST
   :annotation: = initiative_info_not_exist

   

.. py:data:: LOC_INIT_ENTITY_NOT_FOUND
   :annotation: = initiative_entity_not_found

   

.. py:data:: LOC_INIT_ENTITY_VAGUE
   :annotation: = initiative_entity_vague

   

.. py:data:: LOC_INIT_INFO_CLR
   :annotation: = initiative_info_clear

   

.. py:data:: LOC_INIT_INFO_DEL
   :annotation: = initiative_info_delete

   

.. py:data:: LOC_INIT_UNKNOWN
   :annotation: = initiative_unknown_command

   

.. py:data:: LOC_INIT_ERROR
   :annotation: = initiative_error

   

.. py:class:: InitiativeCommand(bot: bot_core.Bot)

   Bases: :py:obj:`command.dicepp_command.UserCommandBase`

   先攻指令, 以.init开头

   .. py:method:: can_process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData) -> Tuple[bool, bool, Any]


   .. py:method:: process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData, hint: Any) -> List[command.bot_command.BotCommandBase]


   .. py:method:: get_help(self, keyword: str, meta: command.dicepp_command.MessageMetaData) -> str


   .. py:method:: get_description(self) -> str


   .. py:method:: add_initiative_entities(self, result_dict: Dict[str, Tuple[int, str]], owner_id: str, group_id: str) -> str

      Args:
          result_dict: 需要加入先攻列表的信息, key为先攻条目名称, val为二元组, val[0]代表先攻数值, val[1]代表掷骰表达式结果
          owner_id: 为空代表无主的NPC, 不为空代表PC账号
          group_id: 目标群号

      Returns:
          feedback: 操作执行成功或失败的提示



