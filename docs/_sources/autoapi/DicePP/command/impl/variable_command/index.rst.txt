:py:mod:`DicePP.command.impl.variable_command`
==============================================

.. py:module:: DicePP.command.impl.variable_command

.. autoapi-nested-parse::

   变量指令, 如.set



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   DicePP.command.impl.variable_command.VariableCommand



Functions
~~~~~~~~~

.. autoapisummary::

   DicePP.command.impl.variable_command.assert_valid_variable_name



Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.command.impl.variable_command.LOC_VAR_SET
   DicePP.command.impl.variable_command.LOC_VAR_GET
   DicePP.command.impl.variable_command.LOC_VAR_GET_ALL
   DicePP.command.impl.variable_command.LOC_VAR_DEL
   DicePP.command.impl.variable_command.LOC_VAR_ERROR


.. py:data:: LOC_VAR_SET
   :annotation: = var_set

   

.. py:data:: LOC_VAR_GET
   :annotation: = var_get

   

.. py:data:: LOC_VAR_GET_ALL
   :annotation: = var_get_all

   

.. py:data:: LOC_VAR_DEL
   :annotation: = var_del

   

.. py:data:: LOC_VAR_ERROR
   :annotation: = var_error

   

.. py:class:: VariableCommand(bot: bot_core.Bot)

   Bases: :py:obj:`command.dicepp_command.UserCommandBase`

   用户自定义变量 包括.set .get .del

   .. py:method:: can_process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData) -> Tuple[bool, bool, Any]


   .. py:method:: process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData, hint: Any) -> List[command.bot_command.BotCommandBase]


   .. py:method:: get_help(self, keyword: str, meta: command.dicepp_command.MessageMetaData) -> str


   .. py:method:: get_description(self) -> str



.. py:function:: assert_valid_variable_name(name: str)


