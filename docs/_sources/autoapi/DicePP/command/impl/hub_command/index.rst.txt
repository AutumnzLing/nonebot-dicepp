:py:mod:`DicePP.command.impl.hub_command`
=========================================

.. py:module:: DicePP.command.impl.hub_command

.. autoapi-nested-parse::

   hub命令, 控制不同机器人之间的交互



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   DicePP.command.impl.hub_command.HubCommand



Functions
~~~~~~~~~

.. autoapisummary::

   DicePP.command.impl.hub_command.format_hub_msg
   DicePP.command.impl.hub_command.is_hub_msg
   DicePP.command.impl.hub_command.process_hub_msg
   DicePP.command.impl.hub_command.process_hub_msg_master
   DicePP.command.impl.hub_command.process_hub_msg_user
   DicePP.command.impl.hub_command.hash_hub_msg
   DicePP.command.impl.hub_command.format_slice_head
   DicePP.command.impl.hub_command.process_slice_head
   DicePP.command.impl.hub_command.format_slice_body
   DicePP.command.impl.hub_command.process_slice_body
   DicePP.command.impl.hub_command.try_slice_hub_msg
   DicePP.command.impl.hub_command.get_random_delay



Attributes
~~~~~~~~~~

.. autoapisummary::

   DicePP.command.impl.hub_command.LOC_HUB_STARTUP
   DicePP.command.impl.hub_command.LOC_HUB_CONNECT
   DicePP.command.impl.hub_command.LOC_HUB_NEW_MEMBER
   DicePP.command.impl.hub_command.LOC_HUB_MSG_IN
   DicePP.command.impl.hub_command.LOC_HUB_LIST
   DicePP.command.impl.hub_command.CFG_HUB_ENABLE
   DicePP.command.impl.hub_command.HUB_MSG_LABEL
   DicePP.command.impl.hub_command.HUB_MSG_SEP
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_M_CONNECT
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_U_INSPECT
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_MSG
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_SLICE_HEAD
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_SLICE_BODY
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_CARD
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_UPDATE
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_REROUTE
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_REQ_REROUTE
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_REQ_CARD
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_SYNC_CONFIRM
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_M_LIST
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_U_LIST
   DicePP.command.impl.hub_command.HUB_MSG_TYPE_LIST
   DicePP.command.impl.hub_command.RAND_INTERVAL_MIN
   DicePP.command.impl.hub_command.RAND_INTERVAL_MAX
   DicePP.command.impl.hub_command.FORCE_SLICE_LEN
   DicePP.command.impl.hub_command.SLICE_HASH_LEN
   DicePP.command.impl.hub_command.SLICE_INDEX_LEN
   DicePP.command.impl.hub_command.SLICE_INDEX_MAX
   DicePP.command.impl.hub_command.SLICE_TOTAL_LEN
   DicePP.command.impl.hub_command.SLICE_LIFE_TIME


.. py:data:: LOC_HUB_STARTUP
   :annotation: = hub_startup

   

.. py:data:: LOC_HUB_CONNECT
   :annotation: = hub_connect

   

.. py:data:: LOC_HUB_NEW_MEMBER
   :annotation: = hub_new_member

   

.. py:data:: LOC_HUB_MSG_IN
   :annotation: = hub_message_in

   

.. py:data:: LOC_HUB_LIST
   :annotation: = hub_list

   

.. py:data:: CFG_HUB_ENABLE
   :annotation: = dicehub_enable

   

.. py:data:: HUB_MSG_LABEL
   :annotation: = dicehub

   

.. py:data:: HUB_MSG_SEP
   :annotation: = %%

   

.. py:data:: HUB_MSG_TYPE_M_CONNECT
   :annotation: = connect

   

.. py:data:: HUB_MSG_TYPE_U_INSPECT
   :annotation: = list

   

.. py:data:: HUB_MSG_TYPE_MSG
   :annotation: = $msg

   

.. py:data:: HUB_MSG_TYPE_SLICE_HEAD
   :annotation: = $slice_head

   

.. py:data:: HUB_MSG_TYPE_SLICE_BODY
   :annotation: = $slice_body

   

.. py:data:: HUB_MSG_TYPE_CARD
   :annotation: = $card

   

.. py:data:: HUB_MSG_TYPE_UPDATE
   :annotation: = $update

   

.. py:data:: HUB_MSG_TYPE_REROUTE
   :annotation: = $reroute

   

.. py:data:: HUB_MSG_TYPE_REQ_REROUTE
   :annotation: = $req_reroute

   

.. py:data:: HUB_MSG_TYPE_REQ_CARD
   

   

.. py:data:: HUB_MSG_TYPE_SYNC_CONFIRM
   

   

.. py:data:: HUB_MSG_TYPE_M_LIST
   

   

.. py:data:: HUB_MSG_TYPE_U_LIST
   

   

.. py:data:: HUB_MSG_TYPE_LIST
   

   

.. py:data:: RAND_INTERVAL_MIN
   :annotation: = 4

   

.. py:data:: RAND_INTERVAL_MAX
   :annotation: = 10

   

.. py:data:: FORCE_SLICE_LEN
   :annotation: = 200

   

.. py:data:: SLICE_HASH_LEN
   :annotation: = 8

   

.. py:data:: SLICE_INDEX_LEN
   :annotation: = 2

   

.. py:data:: SLICE_INDEX_MAX
   

   

.. py:data:: SLICE_TOTAL_LEN
   

   

.. py:data:: SLICE_LIFE_TIME
   

   

.. py:function:: format_hub_msg(msg_type: str, msg_info: str) -> str


.. py:function:: is_hub_msg(msg_str: str) -> bool


.. py:function:: process_hub_msg(msg_str: str) -> Tuple[str, str]


.. py:function:: process_hub_msg_master(msg_str: str) -> Tuple[str, str]


.. py:function:: process_hub_msg_user(msg_str: str) -> Tuple[str, str]


.. py:function:: hash_hub_msg(msg_str: str) -> str

   自带的hash函数每次运行结果都不一样, 自己用base64和ascii码算一个


.. py:function:: format_slice_head(m_type: str, m_hash: str, m_size: int, m_info: str)


.. py:function:: process_slice_head(msg_str: str) -> Tuple[str, str, int, str]


.. py:function:: format_slice_body(m_hash: str, m_index: int, m_info: str)


.. py:function:: process_slice_body(msg_str: str) -> Tuple[str, int, str]


.. py:function:: try_slice_hub_msg(command_list: List[command.bot_command.BotCommandBase]) -> List[command.bot_command.BotCommandBase]


.. py:function:: get_random_delay() -> float


.. py:class:: HubCommand(bot: bot_core.Bot)

   Bases: :py:obj:`command.dicepp_command.UserCommandBase`

   控制不同机器人之间的交互

   .. py:method:: can_process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData) -> Tuple[bool, bool, Any]


   .. py:method:: process_msg(self, msg_str: str, meta: command.dicepp_command.MessageMetaData, hint: Any) -> List[command.bot_command.BotCommandBase]


   .. py:method:: tick(self) -> List[command.bot_command.BotCommandBase]


   .. py:method:: get_help(self, keyword: str, meta: command.dicepp_command.MessageMetaData) -> str


   .. py:method:: get_description(self) -> str


   .. py:method:: process_slice_head(self, remote_id: str, msg_str: str)


   .. py:method:: process_slice_body(self, remote_id: str, msg_str: str, meta: command.dicepp_command.MessageMetaData)


   .. py:method:: finalize_slice_msg(self, remote_id: str, m_hash: str, meta: command.dicepp_command.MessageMetaData)


   .. py:method:: self_validate(self)


   .. py:method:: process_hub_msg(self, command_type: str, command_info: str, meta: command.dicepp_command.MessageMetaData) -> List[command.bot_command.BotCommandBase]



